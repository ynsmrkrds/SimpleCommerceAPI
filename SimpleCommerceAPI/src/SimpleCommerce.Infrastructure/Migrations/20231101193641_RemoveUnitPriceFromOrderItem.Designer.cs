// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TransportGlobal.Infrastructure.Context;

#nullable disable

namespace SimpleCommerce.Infrastructure.Migrations
{
    [DbContext(typeof(SimpleCommerceDBContext))]
    [Migration("20231101193641_RemoveUnitPriceFromOrderItem")]
    partial class RemoveUnitPriceFromOrderItem
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SimpleCommerce.Domain.Entities.Order.OrderEntity", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("UserID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("UserID");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("SimpleCommerce.Domain.Entities.Order.OrderItemEntity", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("OrderID")
                        .HasColumnType("int");

                    b.Property<int>("ProductID")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("OrderID");

                    b.HasIndex("ProductID");

                    b.ToTable("OrderItems");
                });

            modelBuilder.Entity("SimpleCommerce.Domain.Entities.Product.ProductCategoryEntity", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("ProductCategories");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            CreatedDate = new DateTime(2023, 11, 1, 22, 36, 41, 653, DateTimeKind.Local).AddTicks(9781),
                            Description = "Electronics product category",
                            IsDeleted = false,
                            Name = "Electronics"
                        },
                        new
                        {
                            ID = 2,
                            CreatedDate = new DateTime(2023, 11, 1, 22, 36, 41, 653, DateTimeKind.Local).AddTicks(9803),
                            Description = "Clothing product category",
                            IsDeleted = false,
                            Name = "Clothing"
                        },
                        new
                        {
                            ID = 3,
                            CreatedDate = new DateTime(2023, 11, 1, 22, 36, 41, 653, DateTimeKind.Local).AddTicks(9804),
                            Description = "Home appliances category",
                            IsDeleted = false,
                            Name = "Home Appliances"
                        },
                        new
                        {
                            ID = 4,
                            CreatedDate = new DateTime(2023, 11, 1, 22, 36, 41, 653, DateTimeKind.Local).AddTicks(9806),
                            Description = "Sports equipment category",
                            IsDeleted = false,
                            Name = "Sports Equipment"
                        },
                        new
                        {
                            ID = 5,
                            CreatedDate = new DateTime(2023, 11, 1, 22, 36, 41, 653, DateTimeKind.Local).AddTicks(9807),
                            Description = "Jewelry category",
                            IsDeleted = false,
                            Name = "Jewelry"
                        });
                });

            modelBuilder.Entity("SimpleCommerce.Domain.Entities.Product.ProductEntity", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("CategoryID")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int>("StockQuantity")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("CategoryID");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            CategoryID = 1,
                            CreatedDate = new DateTime(2023, 11, 1, 22, 36, 41, 653, DateTimeKind.Local).AddTicks(9939),
                            Description = "High-end smartphone with advanced features",
                            ImageUrl = "https://images.pexels.com/photos/63690/pexels-photo-63690.jpeg",
                            IsDeleted = false,
                            Name = "Smartphone",
                            Price = 599.99m,
                            StockQuantity = 100
                        },
                        new
                        {
                            ID = 2,
                            CategoryID = 1,
                            CreatedDate = new DateTime(2023, 11, 1, 22, 36, 41, 653, DateTimeKind.Local).AddTicks(9949),
                            Description = "Powerful laptop for work and gaming",
                            ImageUrl = "https://images.pexels.com/photos/6446709/pexels-photo-6446709.jpeg",
                            IsDeleted = false,
                            Name = "Laptop",
                            Price = 1299.99m,
                            StockQuantity = 50
                        },
                        new
                        {
                            ID = 3,
                            CategoryID = 1,
                            CreatedDate = new DateTime(2023, 11, 1, 22, 36, 41, 653, DateTimeKind.Local).AddTicks(9950),
                            Description = "Noise-canceling headphones for an immersive audio experience",
                            ImageUrl = "https://images.pexels.com/photos/3394654/pexels-photo-3394654.jpeg",
                            IsDeleted = false,
                            Name = "Headphones",
                            Price = 149.99m,
                            StockQuantity = 200
                        },
                        new
                        {
                            ID = 4,
                            CategoryID = 2,
                            CreatedDate = new DateTime(2023, 11, 1, 22, 36, 41, 653, DateTimeKind.Local).AddTicks(9952),
                            Description = "Comfortable and stylish cotton t-shirt",
                            ImageUrl = "https://images.pexels.com/photos/8532616/pexels-photo-8532616.jpeg",
                            IsDeleted = false,
                            Name = "T-Shirt",
                            Price = 19.99m,
                            StockQuantity = 300
                        },
                        new
                        {
                            ID = 5,
                            CategoryID = 2,
                            CreatedDate = new DateTime(2023, 11, 1, 22, 36, 41, 653, DateTimeKind.Local).AddTicks(9953),
                            Description = "Classic denim jeans for a timeless look",
                            ImageUrl = "https://images.pexels.com/photos/4210864/pexels-photo-4210864.jpeg",
                            IsDeleted = false,
                            Name = "Jeans",
                            Price = 49.99m,
                            StockQuantity = 150
                        },
                        new
                        {
                            ID = 6,
                            CategoryID = 2,
                            CreatedDate = new DateTime(2023, 11, 1, 22, 36, 41, 653, DateTimeKind.Local).AddTicks(9956),
                            Description = "Elegant evening dress for special occasions",
                            ImageUrl = "https://images.pexels.com/photos/1566435/pexels-photo-1566435.jpeg",
                            IsDeleted = false,
                            Name = "Dress",
                            Price = 79.99m,
                            StockQuantity = 100
                        },
                        new
                        {
                            ID = 7,
                            CategoryID = 3,
                            CreatedDate = new DateTime(2023, 11, 1, 22, 36, 41, 653, DateTimeKind.Local).AddTicks(9957),
                            Description = "Energy-efficient refrigerator with spacious storage",
                            ImageUrl = "https://images.pexels.com/photos/6996088/pexels-photo-6996088.jpeg",
                            IsDeleted = false,
                            Name = "Refrigerator",
                            Price = 699.99m,
                            StockQuantity = 50
                        },
                        new
                        {
                            ID = 8,
                            CategoryID = 3,
                            CreatedDate = new DateTime(2023, 11, 1, 22, 36, 41, 653, DateTimeKind.Local).AddTicks(9959),
                            Description = "Front-loading washing machine for clean laundry",
                            ImageUrl = "https://images.pexels.com/photos/5591460/pexels-photo-5591460.jpeg",
                            IsDeleted = false,
                            Name = "Washing Machine",
                            Price = 499.99m,
                            StockQuantity = 75
                        },
                        new
                        {
                            ID = 9,
                            CategoryID = 3,
                            CreatedDate = new DateTime(2023, 11, 1, 22, 36, 41, 653, DateTimeKind.Local).AddTicks(9960),
                            Description = "Compact microwave oven for quick heating",
                            ImageUrl = "https://images.pexels.com/photos/211761/pexels-photo-211761.jpeg",
                            IsDeleted = false,
                            Name = "Microwave Oven",
                            Price = 89.99m,
                            StockQuantity = 100
                        },
                        new
                        {
                            ID = 10,
                            CategoryID = 4,
                            CreatedDate = new DateTime(2023, 11, 1, 22, 36, 41, 653, DateTimeKind.Local).AddTicks(9963),
                            Description = "High-performance running shoes for athletes",
                            ImageUrl = "https://images.pexels.com/photos/2529148/pexels-photo-2529148.jpeg",
                            IsDeleted = false,
                            Name = "Running Shoes",
                            Price = 79.99m,
                            StockQuantity = 200
                        },
                        new
                        {
                            ID = 11,
                            CategoryID = 4,
                            CreatedDate = new DateTime(2023, 11, 1, 22, 36, 41, 653, DateTimeKind.Local).AddTicks(9964),
                            Description = "Non-slip yoga mat for yoga and exercise routines",
                            ImageUrl = "https://images.pexels.com/photos/4498606/pexels-photo-4498606.jpeg",
                            IsDeleted = false,
                            Name = "Yoga Mat",
                            Price = 29.99m,
                            StockQuantity = 150
                        },
                        new
                        {
                            ID = 12,
                            CategoryID = 4,
                            CreatedDate = new DateTime(2023, 11, 1, 22, 36, 41, 653, DateTimeKind.Local).AddTicks(9965),
                            Description = "Adjustable dumbbells for strength training",
                            ImageUrl = "https://images.pexels.com/photos/39671/physiotherapy-weight-training-dumbbell-exercise-balls-39671.jpeg",
                            IsDeleted = false,
                            Name = "Dumbbells",
                            Price = 99.99m,
                            StockQuantity = 100
                        },
                        new
                        {
                            ID = 13,
                            CategoryID = 5,
                            CreatedDate = new DateTime(2023, 11, 1, 22, 36, 41, 653, DateTimeKind.Local).AddTicks(9967),
                            Description = "Exquisite diamond ring for special occasions",
                            ImageUrl = "https://images.pexels.com/photos/1457801/pexels-photo-1457801.jpeg",
                            IsDeleted = false,
                            Name = "Diamond Ring",
                            Price = 1499.99m,
                            StockQuantity = 50
                        },
                        new
                        {
                            ID = 14,
                            CategoryID = 5,
                            CreatedDate = new DateTime(2023, 11, 1, 22, 36, 41, 653, DateTimeKind.Local).AddTicks(9968),
                            Description = "Elegant gold necklace with a timeless design",
                            ImageUrl = "https://images.pexels.com/photos/248077/pexels-photo-248077.jpeg",
                            IsDeleted = false,
                            Name = "Gold Necklace",
                            Price = 799.99m,
                            StockQuantity = 75
                        },
                        new
                        {
                            ID = 15,
                            CategoryID = 5,
                            CreatedDate = new DateTime(2023, 11, 1, 22, 36, 41, 653, DateTimeKind.Local).AddTicks(9970),
                            Description = "Stylish silver bracelet for everyday wear",
                            ImageUrl = "https://images.pexels.com/photos/12026055/pexels-photo-12026055.jpeg",
                            IsDeleted = false,
                            Name = "Silver Bracelet",
                            Price = 149.99m,
                            StockQuantity = 100
                        });
                });

            modelBuilder.Entity("SimpleCommerce.Domain.Entities.User.UserEntity", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ID");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            CreatedDate = new DateTime(2023, 11, 1, 22, 36, 41, 654, DateTimeKind.Local).AddTicks(114),
                            Email = "john.doe@gmail.com",
                            IsDeleted = false,
                            Name = "John",
                            PasswordHash = "wEXC+zsV9xjSjrlsyqK58SjE3IasyI327aF25jotP7/98elqf/+cd+KzKDv2PSPBaeSE0/8cPOnOJYtkZ3y1Eg==",
                            Surname = "Doe"
                        });
                });

            modelBuilder.Entity("SimpleCommerce.Domain.Entities.Order.OrderEntity", b =>
                {
                    b.HasOne("SimpleCommerce.Domain.Entities.User.UserEntity", "User")
                        .WithMany("Orders")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("SimpleCommerce.Domain.Entities.Order.OrderItemEntity", b =>
                {
                    b.HasOne("SimpleCommerce.Domain.Entities.Order.OrderEntity", "Order")
                        .WithMany("Items")
                        .HasForeignKey("OrderID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("SimpleCommerce.Domain.Entities.Product.ProductEntity", "Product")
                        .WithMany("OrderItems")
                        .HasForeignKey("ProductID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("SimpleCommerce.Domain.Entities.Product.ProductEntity", b =>
                {
                    b.HasOne("SimpleCommerce.Domain.Entities.Product.ProductCategoryEntity", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("SimpleCommerce.Domain.Entities.Order.OrderEntity", b =>
                {
                    b.Navigation("Items");
                });

            modelBuilder.Entity("SimpleCommerce.Domain.Entities.Product.ProductCategoryEntity", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("SimpleCommerce.Domain.Entities.Product.ProductEntity", b =>
                {
                    b.Navigation("OrderItems");
                });

            modelBuilder.Entity("SimpleCommerce.Domain.Entities.User.UserEntity", b =>
                {
                    b.Navigation("Orders");
                });
#pragma warning restore 612, 618
        }
    }
}
